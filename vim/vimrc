syntax on
colorscheme material-monokai

set expandtab
set laststatus=2
set nostartofline
set number
set numberwidth=7
set cursorline
set ruler
set autoindent
set smartindent
set nowrap
set expandtab
set shiftwidth=2
set softtabstop=2
set backspace=indent,eol,start
set linespace=2
set cmdheight=2
set updatetime=100
set autoread
set showmatch
set matchtime=3
" set autochdir

highlight link xmlEndTag xmlTag

set backupdir=~/.vim/tmp/backup//
set directory=~/.vim/tmp/swap//
set undodir=~/.vim/tmp/undo//

let mapleader = " "

" CtrlP
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_custom_ignore = 'node_modules\|DS_Store\|git'

" Netrw
let g:netrw_banner = 0
let g:netrw_liststyle = 3
let g:netrw_browse_split = 4
let g:netrw_altv = 1
let g:netrw_winsize = 15

" Ale
let g:ale_fixers = {
\   'javascript': ['eslint'],
\}
let g:ale_fix_on_save = 1
let g:ale_sign_column_always = 1

" Buffers
nnoremap <Tab> :bnext<CR>
nnoremap <S-Tab> :bprevious<CR>
set wildchar=<Tab> wildmenu wildmode=full

" Airline
let g:airline_theme='tomorrow'

" NERDTree
let NERDTreeMinimalUI=1

" FZF.vim
let g:fzf_layout = { 'down': '~50%' }
set rtp+=/usr/local/opt/fzf
let s:ag_options = ' -p ~/.ignore'
command! -bang -nargs=* Ag
      \ call fzf#vim#ag(
      \   <q-args>,
      \   ' -p ~/.ignore',
      \  <bang>0 ? fzf#vim#with_preview('up:60%')
      \        : fzf#vim#with_preview('right:50%:hidden', '?'),
      \   <bang>0
      \ )
let g:fzf_colors =
\ { 'fg':      ['fg', 'Normal'],
  \ 'bg':      ['bg', 'Normal'],
  \ 'hl':      ['fg', 'Comment'],
  \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
  \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
  \ 'hl+':     ['fg', 'Statement'],
  \ 'info':    ['fg', 'PreProc'],
  \ 'border':  ['fg', 'Ignore'],
  \ 'prompt':  ['fg', 'Conditional'],
  \ 'pointer': ['fg', 'Exception'],
  \ 'marker':  ['fg', 'Keyword'],
  \ 'spinner': ['fg', 'Label'],
  \ 'header':  ['fg', 'Comment'] }

nnoremap <leader>p :GFiles<CR>
nnoremap <leader>f :Ag<CR>
nnoremap <leader>b :Buffers<CR>
nnoremap <leader>l :Lines<CR>
nnoremap <leader>c :Commits<CR>
nnoremap <leader>\ :vsp<CR>
nnoremap <leader>a :A<CR>
nnoremap <leader>w <C-W><C-W>
